using two Pointer fast and slow 

class Solution {
    public ListNode middleNode(ListNode head) {
        ListNode temp = head;
        ListNode temp1 = head;

        if(head == null || head.next == null){
            return head;
        }

        while(temp != null && temp.next != null){
            temp = temp.next.next;
            temp1 = temp1.next;
        }
        head = temp1;
        return head;
    }
}


normal approach

class Solution {
    public ListNode middleNode(ListNode head) {
        if(head == null || head.next == null){
            return head;
        }

        int count =0;
        ListNode temp = head;
        while(temp != null){
            count++;
            temp = temp.next;
        }

        int cnt=0;
        ListNode temp1 = head;
        while(temp1 != null){
            cnt++;
            if(cnt == (count/2)+1){
                head = temp1;
                break;
            }
            temp1 = temp1.next;
        }
        return head;        
    }
}
